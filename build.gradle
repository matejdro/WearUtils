apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

buildscript {
    ext {
        defaultSupportLibVersion = "27.0.2"
        defaultSupportWearableVersion = "2.2.0"
        defaultArchComponentsVersion = "1.1.0"
        defaultPlayServicesVersion = "11.8.0"
        defaultKotlinVersion = "1.2.30"
        defaultJunitVersion = "4.12"
        defaultRobolectricVersion = "3.7.1"
    }

    repositories {
        jcenter()
    }

    dependencies {
        def kotlinVersion = defaultKotlinVersion
        if (projects.hasProperty("kotlinVersion")) {
            kotlinVersion = project.properties.get("kotlinVersion")
        }

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}



//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:${getPropertyOrDefault("supportLibVersion", defaultSupportLibVersion)}"
    implementation "com.android.support:recyclerview-v7:${getPropertyOrDefault("supportLibVersion", defaultSupportLibVersion)}"
    implementation "com.android.support:preference-v7:${getPropertyOrDefault("supportLibVersion", defaultSupportLibVersion)}"

    implementation "com.android.support:wear:${getPropertyOrDefault("supportLibVersion", defaultSupportLibVersion)}"

    implementation "com.google.android.support:wearable:${getPropertyOrDefault("supportWearableVersion", defaultSupportWearableVersion)}"
    compileOnly "com.google.android.wearable:wearable:${getPropertyOrDefault("supportWearableVersion", defaultSupportWearableVersion)}"

    implementation "android.arch.lifecycle:extensions:${getPropertyOrDefault("archComponentsVersion", defaultArchComponentsVersion)}"
    implementation "android.arch.lifecycle:runtime:${getPropertyOrDefault("archComponentsVersion", defaultArchComponentsVersion)}"

    implementation "com.google.android.gms:play-services-wearable:${getPropertyOrDefault("playServicesVersion", defaultPlayServicesVersion)}"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${getPropertyOrDefault("kotlinVersion", defaultKotlinVersion)}"

    testImplementation "org.robolectric:robolectric:${getPropertyOrDefault("robolectricVersion", defaultRobolectricVersion)}"
    testImplementation "junit:junit:${getPropertyOrDefault("junitVersion", defaultJunitVersion)}"
}

configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            // Force all of the primary support libraries to use the same version.
            if (details.requested.group == 'com.android.support'
                    && details.requested.name != 'multidex'
                    && details.requested.name != 'multidex-instrumentation') {
                details.useVersion getPropertyOrDefault("supportLibVersion", defaultSupportLibVersion)
            }
        }
    }
}


repositories {
    mavenCentral()
}

def getPropertyOrDefault(property, defaultValue) {
    if (!project.hasProperty(property)) {
        return defaultValue
    }

    return project.properties.get(property)
}